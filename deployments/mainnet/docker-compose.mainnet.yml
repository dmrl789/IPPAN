version: '3.8'

services:
  ippan-mainnet-node:
    image: ippan/ippan:latest
    container_name: ippan-mainnet-node
    restart: unless-stopped
    ports:
      - "8080:8080"  # P2P network port
      - "3000:3000"  # API port
    volumes:
      - mainnet_data:/data
      - mainnet_keys:/keys
      - mainnet_logs:/logs
      - ./config/mainnet.toml:/config/mainnet.toml:ro
      - ./ssl:/ssl:ro
    environment:
      - RUST_LOG=info
      - IPPAN_CONFIG_PATH=/config/mainnet.toml
      - IPPAN_NETWORK_PORT=8080
      - IPPAN_API_PORT=3000
      - IPPAN_STORAGE_DIR=/data
      - IPPAN_KEYS_DIR=/keys
      - IPPAN_LOG_DIR=/logs
      - NODE_ENV=production
      - IPPAN_ENVIRONMENT=mainnet
    networks:
      - ippan_mainnet_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/status"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G

  ippan-mainnet-monitor:
    image: prom/prometheus:latest
    container_name: ippan-mainnet-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - mainnet_monitor_data:/prometheus
      - ./monitoring/prometheus-mainnet.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/ippan-mainnet-rules.yml:/etc/prometheus/ippan-mainnet-rules.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - ippan_mainnet_network
    depends_on:
      - ippan-mainnet-node
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  ippan-mainnet-grafana:
    image: grafana/grafana:latest
    container_name: ippan-mainnet-grafana
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - mainnet_grafana_data:/var/lib/grafana
      - ./monitoring/grafana-mainnet.yml:/etc/grafana/grafana.ini:ro
      - ./monitoring/grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana-datasource.yml:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY}
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=ippan-mainnet-postgres:5432
      - GF_DATABASE_NAME=grafana
      - GF_DATABASE_USER=grafana
      - GF_DATABASE_PASSWORD=${GRAFANA_DB_PASSWORD}
      - GF_SERVER_DOMAIN=${GRAFANA_DOMAIN}
      - GF_SERVER_ROOT_URL=https://${GRAFANA_DOMAIN}
    networks:
      - ippan_mainnet_network
    depends_on:
      - ippan-mainnet-monitor
      - ippan-mainnet-postgres
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  ippan-mainnet-alertmanager:
    image: prom/alertmanager:latest
    container_name: ippan-mainnet-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - mainnet_alert_data:/alertmanager
      - ./monitoring/alertmanager-mainnet.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=https://${ALERTMANAGER_DOMAIN}'
      - '--cluster.listen-address=0.0.0.0:9094'
    networks:
      - ippan_mainnet_network
    depends_on:
      - ippan-mainnet-monitor
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  ippan-mainnet-postgres:
    image: postgres:15-alpine
    container_name: ippan-mainnet-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - mainnet_postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      - POSTGRES_DB=ippan_mainnet
      - POSTGRES_USER=ippan
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    networks:
      - ippan_mainnet_network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  ippan-mainnet-redis:
    image: redis:7-alpine
    container_name: ippan-mainnet-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - mainnet_redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - ippan_mainnet_network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  ippan-mainnet-lb:
    image: nginx:alpine
    container_name: ippan-mainnet-lb
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-mainnet.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - mainnet_lb_logs:/var/log/nginx
    networks:
      - ippan_mainnet_network
    depends_on:
      - ippan-mainnet-node
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  ippan-mainnet-fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: ippan-mainnet-fluentd
    restart: unless-stopped
    volumes:
      - ./monitoring/fluentd-mainnet.conf:/fluentd/etc/fluent.conf:ro
      - mainnet_logs:/var/log/ippan:ro
      - mainnet_fluentd_data:/var/log/fluentd
    networks:
      - ippan_mainnet_network
    depends_on:
      - ippan-mainnet-node
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  ippan-mainnet-backup:
    image: ippan/backup:latest
    container_name: ippan-mainnet-backup
    restart: unless-stopped
    volumes:
      - mainnet_data:/data:ro
      - mainnet_keys:/keys:ro
      - mainnet_backup_data:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    environment:
      - BACKUP_ENCRYPTION_KEY=${BACKUP_ENCRYPTION_KEY}
      - BACKUP_S3_BUCKET=${BACKUP_S3_BUCKET}
      - BACKUP_S3_REGION=${BACKUP_S3_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    networks:
      - ippan_mainnet_network
    depends_on:
      - ippan-mainnet-node
      - ippan-mainnet-postgres
    command: ["/backup.sh", "--schedule"]
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

volumes:
  mainnet_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/ippan/mainnet/data
  mainnet_keys:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/ippan/mainnet/keys
  mainnet_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/ippan/mainnet/logs
  mainnet_monitor_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/ippan/mainnet/monitor
  mainnet_grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/ippan/mainnet/grafana
  mainnet_alert_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/ippan/mainnet/alertmanager
  mainnet_postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/ippan/mainnet/postgres
  mainnet_redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/ippan/mainnet/redis
  mainnet_lb_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/ippan/mainnet/nginx/logs
  mainnet_fluentd_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/ippan/mainnet/fluentd
  mainnet_backup_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/ippan/mainnet/backups

networks:
  ippan_mainnet_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    driver_opts:
      com.docker.network.bridge.name: ippan-mainnet-br
