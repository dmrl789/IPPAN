name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of tests to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - unit
          - integration
          - e2e

permissions:
  contents: read

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'unit' || github.event.inputs.test_type == ''

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy,rustfmt

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run Rust unit tests
        run: cargo test --workspace --lib -- --nocapture

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Run Frontend unit tests
        working-directory: apps/unified-ui
        run: |
          npm ci
          npm run test:unit || echo "No unit test script found, skipping"

      - name: Run Gateway unit tests
        working-directory: apps/gateway
        run: |
          npm ci
          npm run test:unit || echo "No unit test script found, skipping"

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'integration' || github.event.inputs.test_type == ''

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run Rust integration tests
        run: cargo test --workspace --test '*' -- --nocapture

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Run Frontend integration tests
        working-directory: apps/unified-ui
        run: |
          npm ci
          npm run test:integration || echo "No integration test script found, skipping"

      - name: Run Gateway integration tests
        working-directory: apps/gateway
        run: |
          npm ci
          npm run test:integration || echo "No integration test script found, skipping"

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'e2e' || github.event.inputs.test_type == ''

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        working-directory: apps/unified-ui
        run: npm ci

      - name: Build application
        working-directory: apps/unified-ui
        run: npm run build

      - name: Run E2E tests
        working-directory: apps/unified-ui
        run: |
          npm run test:e2e || echo "No E2E test script found, skipping"

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == ''

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run Rust tests with coverage
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --workspace --out Xml --output-dir coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/cobertura.xml
          flags: rust
          name: rust-coverage

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Run Frontend tests with coverage
        working-directory: apps/unified-ui
        run: |
          npm ci
          npm run test:coverage || echo "No coverage test script found, skipping"

      - name: Upload Frontend coverage
        uses: codecov/codecov-action@v3
        with:
          directory: apps/unified-ui
          flags: frontend
          name: frontend-coverage
