name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  pull-requests: write

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy,rustfmt

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            apps/*/node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/Cargo.lock', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Rust Format Check
        run: cargo fmt --all -- --check

      - name: Rust Clippy
        run: cargo clippy --workspace --all-targets -- -D warnings

      - name: Rust Test
        run: cargo test --workspace --all-features -- --nocapture

      - name: Frontend Lint
        working-directory: apps/unified-ui
        run: |
          npm ci
          npm run lint || echo "Lint script not found, skipping"

      - name: Frontend Type Check
        working-directory: apps/unified-ui
        run: |
          npm run type-check || echo "Type check script not found, skipping"

      - name: Gateway Lint
        working-directory: apps/gateway
        run: |
          npm ci
          npm run lint || echo "Lint script not found, skipping"

      - name: Gateway Type Check
        working-directory: apps/gateway
        run: |
          npm run type-check || echo "Type check script not found, skipping"

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for broken links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'yes'
          config-file: '.github/link-check-config.json'
        continue-on-error: true

      - name: Check README exists
        run: |
          if [ ! -f "README.md" ]; then
            echo "::error::README.md is missing"
            exit 1
          fi

      - name: Check for TODO/FIXME comments
        run: |
          echo "Checking for TODO/FIXME comments..."
          if grep -r -i "TODO\|FIXME" --include="*.rs" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" .; then
            echo "::warning::Found TODO/FIXME comments in code"
          fi

  performance:
    name: Performance Checks
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: apps/unified-ui
        run: npm ci

      - name: Build performance check
        working-directory: apps/unified-ui
        run: |
          echo "Building with performance monitoring..."
          time npm run build
          
          # Check bundle size
          if [ -d "dist" ]; then
            echo "Bundle size analysis:"
            du -sh dist/*
          fi

      - name: Rust build performance
        run: |
          echo "Rust build performance:"
          time cargo build --workspace --release
          
          # Check binary sizes
          echo "Binary sizes:"
          find target/release -name "ippan*" -type f -exec ls -lh {} \;
