name: Codex Auto PR
on:
  push:
    branches:
      - "codex/**"
      - work
      - "work/**"
  create:
  schedule:
    - cron: "*/10 * * * *"
  workflow_dispatch:

jobs:
  open-prs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Open PRs for codex/** and work (if missing)
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;

            // helper to ensure a PR exists from head->main
            async function ensurePR(head) {
              const prs = await github.paginate(github.pulls.list, {
                owner, repo, state: "open", head: `${owner}:${head}`, base: "main"
              });
              if (prs.length > 0) return;

              const { data: pr } = await github.pulls.create({
                owner, repo, title: `Auto PR: ${head}`, head, base: "main",
                body: "Auto PR created by workflow."
              });
              await github.issues.addLabels({
                owner, repo, issue_number: pr.number, labels: ["automerge"]
              });
            }

            // discover branches under codex/** and work/**
            async function listHeads(prefix) {
              const refs = await github.paginate(github.git.listMatchingRefs, {
                owner, repo, ref: `heads/${prefix}`
              });
              return refs.map(r => r.ref.replace("refs/heads/", ""));
            }

            const codex = await listHeads("codex/");
            const workLike = await listHeads("work/");

            // also include plain 'work' if it exists
            try {
              await github.repos.getBranch({ owner, repo, branch: "work" });
              workLike.push("work");
            } catch (_) {}

            for (const head of [...new Set([...codex, ...workLike])]) {
              await ensurePR(head);
            }
