# Multi-stage build for production
FROM rust:1.75-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy manifests
COPY Cargo.toml Cargo.lock ./
COPY crates/ crates/
COPY node/ node/

# Build the application
RUN cargo build --release --workspace

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r ippan && useradd -r -g ippan ippan

# Create directories
RUN mkdir -p /var/lib/ippan /var/log/ippan /etc/ippan && \
    chown -R ippan:ippan /var/lib/ippan /var/log/ippan /etc/ippan

# Copy binary from builder stage
COPY --from=builder /app/target/release/ippan-node /usr/local/bin/ippan-node

# Set ownership
RUN chown ippan:ippan /usr/local/bin/ippan-node && \
    chmod +x /usr/local/bin/ippan-node

# Switch to non-root user
USER ippan

# Expose ports
EXPOSE 8080 9000 9090

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Set working directory
WORKDIR /var/lib/ippan

# Default command
CMD ["ippan-node"]