# Multi-stage build for IPPAN Node
FROM rust:1.75-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /usr/src/ippan

# Copy workspace files
COPY Cargo.toml Cargo.lock ./
COPY crates/ ./crates/
COPY node/ ./node/

# Build the application
RUN cargo build --release --bin ippan-node

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create ippan user
RUN groupadd -r ippan && useradd -r -g ippan ippan

# Create directories
RUN mkdir -p /opt/ippan/bin /opt/ippan/data /var/log/ippan && \
    chown -R ippan:ippan /opt/ippan /var/log/ippan

# Copy binary from builder stage
COPY --from=builder /usr/src/ippan/target/release/ippan-node /opt/ippan/bin/ippan-node

# Set permissions
RUN chmod +x /opt/ippan/bin/ippan-node

# Switch to ippan user
USER ippan

# Set working directory
WORKDIR /opt/ippan

# Expose ports
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/time || exit 1

# Set environment variables
ENV RUST_LOG=info
ENV IPPAN_NETWORK=mainnet
ENV IPPAN_DATA_DIR=/opt/ippan/data

# Run the application
CMD ["/opt/ippan/bin/ippan-node"]